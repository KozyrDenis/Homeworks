import UIKit

/*
 MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.
 
 TODO: - üßë‚Äçüíª –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∂–¥—ã–π –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –†–µ—à–µ–Ω–∏–µ –ø–∏—à–∏—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –ø–æ—Å–ª–µ –∑–∞–¥–∞–Ω–∏—è:
 // - –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–≤–∞ –ø—É—Å—Ç—ã—Ö –º–∞—Å—Å–∏–≤–∞ foodArray and drinkArray —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
 */
var foodArray: [String] = []
var drinkArray: [String] = []
//–≤–∑—è–ª –≤ –∫–∞–≤—ã—á–∫–∏ —Ç–∞–∫ –∫–∞–∫ –≤—ã–¥–∞–≤–∞–ª–æ –æ—à–∏–±–∫—É

 // - –ø—Ä–∏—Å–≤–æ–π—Ç–µ –ø–µ—Ä–≤–æ–º—É –º–∞—Å—Å–∏–≤—É —Å—Ç—Ä–∏–Ω–≥ –∑–Ω–∞—á–µ–Ω–∏—è - –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–º–∏–Ω–∏–º—É–º 5)
foodArray = ["burger", "sandwich", "frenchfries", "chocolate", "cheese", "sausage"]

 // - –ø—Ä–∏—Å–≤–æ–π—Ç–µ –≤—Ç–æ—Ä–æ–º—É –º–∞—Å—Å–∏–≤—É –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞–ø–∏—Ç–∫–æ–≤ (–º–∏–Ω–∏–º—É–º 5)
drinkArray = ["milk", "cola" , "coffee", "beer" , "water", "juice"]

 // - –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ–Ω–µ—Ü foodArray –µ—â–µ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ
foodArray.append("butter")
 // - –¥–æ–±–∞–≤—å—Ç–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É drinkArray –µ—â–µ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ
let midleIndex = drinkArray.count / 2
drinkArray.insert("coconut milk", at: midleIndex)
 print(drinkArray)
 // - —Å–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–µ—Ç–∏–π –º–∞—Å—Å–∏–≤ shoppingList, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ foodArray and drinkArray
 var shoppingList = foodArray + drinkArray
 
 // - —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏–∑ shoppingList –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ shoppingList.
print(shoppingList)
print(shoppingList.count)
 // - —É–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤–æ–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É 2 –∏–∑ shoppingList
print(shoppingList.count)
shoppingList.remove(at:0)
shoppingList.remove(at:12)
shoppingList.remove(at: 2)
print(shoppingList)
 // - –æ–±—ä—è–≤–∏—Ç–µ —Å–ª–æ–≤–∞—Ä—å priceList, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∞–º–∏ –±—É–¥—É—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ü–µ–Ω—ã –¥–ª—è —ç—Ç–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (—Ü–µ–Ω—ã —Å –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç—å—é)
var priceList: [String : Float] = ["burger": 24.3, "sandwich" : 12.4, "frenchfries" : 7.5, "chocolate" : 2.5, "cheese" : 1.5, "sausage" : 0.5, "butter" : 1.75]

 // - –¥–æ–±–∞–≤—å—Ç–µ –∏ —É–¥–∞–ª–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Å–ª–æ–≤–∞—Ä—è.
priceList["sandwich"] = nil
print(priceList)

priceList["snickers"] = 7.8
print(priceList)
 // - —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è

print(priceList)
 // - –æ–±—ä—è–≤–∏—Ç–µ –¥–≤–∞ —Å–µ—Ç–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞.
let firstSet: Set<Int> = [22, 23, 24, 25]
let secondSet: Set<Int> = [22, 32, 42, 52]

 // - –ø—Ä–∏–º–µ–Ω–∏—Ç–µ –∫ –≤—ã—à–µ–æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–º —Å–µ—Ç–∞–º–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ symmetricDifference, union, intersection, substracting, isSubset(of:), isSuperset(of:)
firstSet.symmetricDifference(secondSet)
firstSet.union(secondSet)
firstSet.intersection(secondSet)
firstSet.subtracting(secondSet)
firstSet.isSubset(of:secondSet)
firstSet.isSuperset(of:secondSet)


// MARK: - üè† –ì–æ—Ç–æ–≤–∏–º —É–∂–∏–Ω.
/*
 –í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —É–∂–∏–Ω –∏–∑ 3 –±–ª—é–¥ - —Å–∞–ª–∞—Ç, –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ –∏ –¥–µ—Å—Å–µ—Ä—Ç. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –∏–Ω–≥—Ä–∏–¥–∏–µ—Ç–æ–≤. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ —ç—Ç–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫–∏–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–∫—É–ø–∏—Ç—å.
 
–í–Ω–∏–º–∞–Ω–∏–µ! –ó–¥–µ—Å—å –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏–Ω–≥—Ä–∏–¥–∏–µ—Ç–æ–≤, –±–µ–∑ —É—á–µ—Ç–∞ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞. –¢.–µ. –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã —è–π—Ü–∞ –≤ –¥–≤—É—Ö –±–ª—é–¥–∞—Ö, –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è –ø–æ–∫—É–ø–æ–∫ —É–∫–∞–∂–∏—Ç–µ –∏—Ö —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
 
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–Ω–≥—Ä–∏–¥–∏–µ—Ç–æ–≤. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞ –±—É–¥–µ—Ç —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤, –≤–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è. –¢–∞–∫ –∂–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –¥–ª—è –∏–Ω–≥—Ä–∏–¥–∏–µ—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å –µ—Å—Ç—å (–≤–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ) –∏ –¥–ª—è –∏–Ω–≥—Ä–∏–¥–∏–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å (–≤—ã—á–∏—Å–ª—è–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–≥–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏ —Ç–æ–≥–æ, —á—Ç–æ –µ—Å—Ç—å).
 
 –ü–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫–æ–π —Ç–∏–ø –∫–æ–ª–ª–µ–∫—Ü–∏–π –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

*/
var refreeArray: Set = ["milk", "potatoes","carrot", "meat", "oil", "syrop"]

var dessert: Set = ["milk", "berries", "chocolate", "cream"]
var salad: Set = ["cucumbers", "tomatoes", "oil", "salt", " dill"]
var main: Set = ["oil", "potatoes", "carrot", "sour cream", "meat", "dill"]
dessert.subtracting(refreeArray)
salad.subtracting(refreeArray)
main.subtracting(refreeArray)

/*
 TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é (–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–µ –Ω—É–∂–Ω–æ, –Ω–æ –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º –æ—Ç–≤–µ—Ç–∏—Ç—å):
 - –ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ array, set and dictionary?
 - –ö–∞–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —Å –Ω–∏–º–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å?
 */
let string = "home"
string.hashValue
