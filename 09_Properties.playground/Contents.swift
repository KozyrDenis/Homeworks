import UIKit

// MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.
 
// TODO: - üßë‚Äçüíª
/* 1.
–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Student —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º firstName. –î–æ–±–∞–≤—å—Ç–µ property observer –¥–ª—è —Å–≤–æ–π—Å—Ç–≤–∞ firstName, —á—Ç–æ–±—ã –ø–µ—á–∞—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∫–∞–∫ —Å–≤–æ–π—Å—Ç–≤–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
 –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–ª–∞—Å—Å —Å–≤–æ–π—Å—Ç–≤–æ isValid, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏. –û–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –¥–ª–∏–Ω–Ω–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤.
 */
class Student {
    lazy var greeting = "Hello our student \(firstName)"
    var firstName: String {
        willSet {
            print("name \(firstName) will be change")
        }
        didSet {
            if firstName != firstName {
                print("present name now is \(firstName)")
            }
        }
    }
    init(firstName: String = "Denis") {
        self.firstName = firstName
    }
}
@propertyWrapper
class RangedValue {
    var quantity = 10
    var countCharacter = 0
    var minCharacters = 2
    var maxCharacters = 15
    var wrappedValue: Int {
        get {
            if countCharacter < minCharacters {
                print("Your name is short")
            } else {
                print ("name is acceptable")
            }; if countCharacter > maxCharacters {
                print("You name is longer")
            } else {
                print("Name is acceptable")
            }
            return countCharacter
        }
    }
}
var nameStudent = Student.init(firstName: "Denis")
nameStudent.firstName = "Michael"
/* 2.
 –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Person —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º age, —Ç–∏–ø–∞ Int. –î–æ–±–∞–≤—å—Ç–µ property observer –∫ —Å–≤–æ–π—Å—Ç–≤—É age, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º. –ï—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 0.
 */
class Person {
    var age: Int {
        willSet {
            if age < 0 {
                print(0)
            }
        }
        didSet {
            if age > 0 {
                print("‚úÖ")
            }
        }
    }
    init(age: Int) {
        self.age = age
    }
}
var personAge = Person.init(age: 26)
personAge.age = -21
personAge.age = -1
personAge.age = -52

/*
 –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Rectangle —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ width –∏ height. –î–æ–±–∞–≤—å—Ç–µ computed property —Å –∏–º–µ–Ω–µ–º area, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ (width * height).
 */
struct Rectangle {
    var width: Int
    var height: Int
    
    var area: Int {
        get {
            return width * height
        }
        set {
            newValue * newValue
        }
    }
    init(width: Int, height: Int) {
        self.width = width
        self.height = height
        self.area = area
    }
}
Rectangle(width: 4, height: 4)
var rec2 = Rectangle(width: 10, height: 200)
print(rec2)
rec2.area
/*
 –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å User, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç.
 –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤–æ–∑—Ä–∞—Å—Ç —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏–ª–æ—Å—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è.
 –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–ª–∞—Å—Å —Å–≤–æ–π—Å—Ç–≤–∞, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –æ–±—ä–µ–∫—Ç–∞ (3 —Å–≤–æ–π—Å—Ç–≤–∞ - –≤–µ—Å, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å). –ü—Ä–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–∞–∑–Ω–∏—Ü—ã –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤—É –ø–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ, —Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –µ—Å–ª–∏ –≤—ã—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ, —Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ).
 –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤–µ—Å —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏ –µ–º—É –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö—É–¥–µ–ª –∏–ª–∏ –ø–æ—Ç–æ—Å—Ç–µ–ª –æ–±—ä–µ–∫—Ç.
 –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Å–∞ User.
*/

class User {
    var name: String
    var surname: String
    lazy var weightMessage: String = "Your weight is \(weight) now. Difference is \(weight - maxWeight) from maximum weight \(maxWeight) and \(weight - minWeight) from minimum weight \(minWeight)"
    var height: Float
    var age: Int {
        willSet{
            print(age)
        }
        didSet{
            if age != 26 {
                print("Happy Birthday")
            }
        }
    }
    var minWeight: Int
    var maxWeight: Int
    var weight: Int {
        willSet {
            print("Your weight is \(weight)")
        }
        didSet{
            if weight > maxWeight {
                print(weightMessage)
            }
            if weight < minWeight {
                print(weightMessage)
            }
            weight = maxWeight
            weight = minWeight
        }
    }
    init(name: String, surname: String, height: Float, age: Int, minWeight: Int, maxWeight: Int, weight: Int) {
        self.name = name
        self.surname = surname
        self.height = height
        self.age = age
        self.minWeight = minWeight
        self.maxWeight = maxWeight
        self.weight = weight
    }
}
var Denis = User(name: "Denis", surname: "Kozyr", height: 1.45, age: 26, minWeight: 90, maxWeight: 120, weight: 200)
print(Denis.weight)
Denis.weight = 130
Denis.age = 23
var value = Denis.self

/*
 –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
 
 –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É ‚Ññ2, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä –≤–º–µ—Å—Ç–æ property observer
 */

/*
 TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é:
 - –í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É stored –∏ computed properties?
 - –ß—Ç–æ –∑–Ω–∞—á–∏—Ç lazy?
 - –ß—Ç–æ —Ç–∞–∫–æ–µ getter –∏ setter?
 - –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è property observers?
 - –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è property wrappers?
 */

